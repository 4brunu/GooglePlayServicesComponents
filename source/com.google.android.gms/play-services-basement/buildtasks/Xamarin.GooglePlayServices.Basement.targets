<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- 
    * 
    * Xamarin GooglePlayServices Basement MSBuild Tasks
    * 
  -->

  <!-- the pre-build checks -->
  <Target Name="ProcessGoogleServicesJsonChecks" Condition=" '@(GoogleServicesJson)' == '' " BeforeTargets="BeforeBuild">
    <Message Text="No GoogleServicesJson file specified." />
  </Target>


  <!-- make the 'GoogleServicesJson' build action available in the Visual Studio dropdown -->
  <ItemGroup>
    <AvailableItemName Include="GoogleServicesJson" />   
  </ItemGroup>

  <PropertyGroup>
    <ProcessGoogleServicesJsonTaskFilename Condition=" '$(ProcessGoogleServicesJsonTaskFilename)' == '' ">$(MSBuildThisFileDirectory)Xamarin.GooglePlayServices.Tasks.dll</ProcessGoogleServicesJsonTaskFilename>
    <ProcessGoogleServicesJsonResDirName Condition=" '$(ProcessGoogleServicesJsonResDirName)' == '' ">googsvcsjson</ProcessGoogleServicesJsonResDirName>

    <ProcessGoogleServicesJsonResDirPath>$(IntermediateOutputPath)$(ProcessGoogleServicesJsonResDirName)\</ProcessGoogleServicesJsonResDirPath>
    <ProcessGoogleServicesJsonResStringsPath>$(ProcessGoogleServicesJsonResDirPath)values\goog_svcs_json.xml</ProcessGoogleServicesJsonResStringsPath>
    <ProcessGoogleServicesJsonResXmlPath>$(ProcessGoogleServicesJsonResDirPath)xml\global_tracker.xml</ProcessGoogleServicesJsonResXmlPath>
    <ProcessGoogleServicesJsonStampPath>$(IntermediateOutputPath)googsvcsjson.stamp</ProcessGoogleServicesJsonStampPath>
  </PropertyGroup>

  <PropertyGroup>
    <CleanDependsOn>
      $(CleanDependsOn);
      _CleanProcessGoogleServicesJson;
    </CleanDependsOn>
  </PropertyGroup>

  <!-- include the task assembly -->
  <UsingTask 
      AssemblyFile="Xamarin.GooglePlayServices.Tasks.dll" 
      TaskName="Xamarin.GooglePlayServices.Tasks.ProcessGoogleServicesJson" />

  <!-- the build tasks -->
  <Target
    Name="SetupGoogleServicesJson"
    Condition=" '@(GoogleServicesJson)' != '' AND '$(AndroidApplication)' == 'True'"
    BeforeTargets="ProcessGoogleServicesJson">
      
    <ConvertToAbsolutePath Paths="$(ProcessGoogleServicesJsonResDirPath)">
      <Output TaskParameter="AbsolutePaths" PropertyName="ProcessGoogleServicesJsonResDirPathAbs"/>
    </ConvertToAbsolutePath>

    <ItemGroup>
        <LibraryResourceDirectories Condition="Exists ('$(ProcessGoogleServicesJsonResDirPathAbs)')" Include="$(ProcessGoogleServicesJsonResDirPathAbs)" />
    </ItemGroup>
  </Target>


  <Target
    Name="ProcessGoogleServicesJson" 
    Condition=" '@(GoogleServicesJson)' != '' AND '$(AndroidApplication)' == 'True'"
    BeforeTargets="_GenerateAndroidResourceDir"
    DependsOnTargets="SetupGoogleServicesJson"
    Inputs="@(GoogleServicesJson)"
    Outputs="$(IntermediateOutputPath)googsvcsjson.stamp">

    <ProcessGoogleServicesJson
        GoogleServicesJsons="@(GoogleServicesJson)"
        ResPath="$(ProcessGoogleServicesJsonResDirPath)"
        StampPath="$(ProcessGoogleServicesJsonStampPath)"
        ResStringsPath="$(ProcessGoogleServicesJsonResStringsPath)"
        ResXmlPath="$(ProcessGoogleServicesJsonResXmlPath)"
        AndroidPackageName="$(_AndroidPackage)">
          <Output TaskParameter="ResPathAbs" ItemName="LibraryResourceDirectories" />
    </ProcessGoogleServicesJson>

    <ItemGroup>
        <FileWrites Condition="Exists ('$(ProcessGoogleServicesJsonResStringsPath)')" Include="$(ProcessGoogleServicesJsonResStringsPath)" />
        <FileWrites Condition="Exists ('$(ProcessGoogleServicesJsonResXmlPath)')" Include="$(ProcessGoogleServicesJsonResXmlPath)" />
    </ItemGroup>
  </Target>

  <Target Name="_CleanProcessGoogleServicesJson">
    <RemoveDir Directories="$(ProcessGoogleServicesJsonResDirPath)" Condition="Exists ('$(ProcessGoogleServicesJsonResDirPath)' )" />
    <Delete Files="$(ProcessGoogleServicesJsonStampPath)" />
  </Target>

	
  <!-- If set to False, here, or elsewhere, we won't try to add this optional library to proguard invocations -->
  <PropertyGroup Condition=" $(IncludeOrgApacheHttpLegacyJarInProguard) == '' ">
    <IncludeOrgApacheHttpLegacyJarInProguard>True</IncludeOrgApacheHttpLegacyJarInProguard>
  </PropertyGroup>

  <!-- 
  Play Services still references org.apache.http.legacy.jar, however this lib is optional and not included in the proguard
  call by default.  This target will add this external library, if it exists in the ANDROID_HOME/platform/android-ZZ/optional/ folder
  For the given api level (ZZ) unless the property is explicitly set to override this behaviour
  -->
  <Target Name="AddOrgApacheHttpLegacyJarInProguardExternalJavaLibs"
      AfterTargets="_ResolveMonoAndroidSdks;_ValidateAndroidPackageProperties"
      BeforeTargets="Proguard"
      Condition="$(IncludeOrgApacheHttpLegacyJarInProguard) == 'True' and Exists ('$(AndroidSdkDirectory)/platforms/android-$(_AndroidTargetSdkVersion)/optional/org.apache.http.legacy.jar')">
    <ItemGroup>
      <AndroidExternalJavaLibrary Include="$(AndroidSdkDirectory)/platforms/android-$(_AndroidTargetSdkVersion)/optional/org.apache.http.legacy.jar" />
    </ItemGroup>
  </Target>
</Project>
